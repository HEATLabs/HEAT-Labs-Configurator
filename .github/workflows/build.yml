name: Build and Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: macos-latest
            electron_arch: x64,arm64
          - os: ubuntu-latest
            electron_arch: x64
          - os: windows-latest
            electron_arch: x64

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Install Electron Builder
      run: npm install electron-builder --save-dev

    - name: Set up GitHub Token
      if: matrix.os == 'macos-latest'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "GH_TOKEN=$GH_TOKEN" >> $GITHUB_ENV

    - name: Build Electron app
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          npx electron-builder --${{ matrix.os }} --config.asar=false --publish=never
        else
          npx electron-builder --${{ matrix.os }} --config.asar=false
        fi
      env:
        CI: true
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/build-ubuntu-latest/*
          artifacts/build-macos-latest/*
          artifacts/build-windows-latest/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}